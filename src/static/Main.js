function Main(window, document, userId, translate, gLanguage, gSection) {

var DarkBackground = "#455A64"

var LineHeight = 34
var MobileWidth = 700
var BigWidth = 1000
var LogonWidth = 300

var globs = {}
globs.resizer = null

var logonCtrl = new Logon(window, document, translate)

// Autogenerated with DRAKON Editor 1.32


function FontLoader_Idle_onData(self, msg) {
    // item 1147
    self.fonts = msg
    self.current = 1
    // item 1148
    loadFont(
        self.fonts[0],
        self
    )
    // item 1106
    self.state = "Loading";
}

function FontLoader_Idle_onError(self, msg) {
    // item 1149
    self.state = "Idle";
}

function FontLoader_Loading_onData(self, msg) {
    // item 1159
    if (self.current < self.fonts.length) {
        // item 1156
        loadFont(
            self.fonts[self.current],
            self
        )
        // item 1161
        self.current++
        // item 1109
        self.state = "Loading";
    } else {
        // item 1163
        startTimer(self, 50)
        // item 1185
        self.state = "Waiting";
    }
}

function FontLoader_Loading_onError(self, msg) {
    // item 1158
    self.target.onError(msg)
    // item 1157
    self.state = "Idle";
}

function FontLoader_Waiting_default(self, msg) {
    // item 1176
    self.state = "Waiting";
}

function FontLoader_Waiting_timer(self, msg) {
    // item 1184
    self.target.onData(null)
    // item 1162
    self.state = null;
}

function Resizer_Desktop_resizeDesktop(self, msg) {
    // item 602
    resizeDesktop()
    // item 592
    self.state = "Desktop";
}

function Resizer_Desktop_resizeMobile(self, msg) {
    // item 605
    destroyDesktopMenu()
    // item 604
    createMobileMenu()
    // item 586
    self.state = "Mobile";
}

function Resizer_MobileMenu_hideMenu(self, msg) {
    // item 767
    destroyMobileMainMenu()
    // item 774
    createMobileMenu()
    // item 764
    self.state = "Mobile";
}

function Resizer_MobileMenu_resizeDesktop(self, msg) {
    // item 778
    destroyMobileMainMenu()
    // item 779
    createDesktopMenu()
    // item 780
    self.state = "Desktop";
}

function Resizer_MobileMenu_resizeMobile(self, msg) {
    // item 765
    resizeMobileMainMenu()
    // item 758
    self.state = "MobileMenu";
}

function Resizer_Mobile_resizeDesktop(self, msg) {
    // item 607
    destroyMobileMenu()
    // item 606
    createDesktopMenu()
    // item 599
    self.state = "Desktop";
}

function Resizer_Mobile_resizeMobile(self, msg) {
    // item 603
    resizeMobile()
    // item 593
    self.state = "Mobile";
}

function Resizer_Mobile_showMenu(self, msg) {
    // item 773
    destroyMobileMenu()
    // item 772
    createMobileMainMenu()
    // item 769
    self.state = "MobileMenu";
}

function Resizer_Start_resizeDesktop(self, msg) {
    // item 600
    createDesktopMenu()
    // item 585
    self.state = "Desktop";
}

function Resizer_Start_resizeMobile(self, msg) {
    // item 601
    createMobileMenu()
    // item 573
    self.state = "Mobile";
}

function acceptCookies() {
    // item 45
    show("cookie_warning", "none")
    // item 44
    HtmlUtils.setCookie(
        "cookies_accepted",
        "true",
        30
    )
}

function addPopupItem(div, item) {
    // item 102
    if (item.type == "separator") {
        // item 105
        var hr = make(div, "hr")
        hr.style.margin = "0px"
    } else {
        // item 99
        var callback = function(evt) {
        	hidePopup()
        	item.code(evt)
        }
        // item 100
        var row = make(div, "div")
        row.className = "list_item"
        row.style.height = LineHeight + "px"
        // item 107
        var textPart = makeIB(row)
        textPart.style.padding = "8px"
        // item 106
        HtmlUtils.setDivText(
        	textPart,
        	translate(item.text)
        )
        // item 108
        var itemId = item.id || ""
        // item 101
        row.onclick = callback
    }
}

function buildLogonDivGui() {
    var forgot, ok, password, status, title, titleStyle, username
    // item 911
    titleStyle = {
        fontSize : "150%",
        fontWeight : "bold",
        textAlign : "center",
        margin : "10px",
        color : "#990000"
    }
    // item 910
    title = {
        type : "wlabel",
        text : "MES_LOGIN",
        style : titleStyle
    }
    // item 903
    username = {
        type : "edit",
        editType : "text",
        water : translate("MES_USERNAME"),
        id : "username"
    }
    // item 904
    password = {
        type : "edit",
        editType : "password",
        water : translate("MES_PASSWORD"),
        id : "password"
    }
    // item 908
    forgot = {
        type : "custom",
        builder : makeRecoverLink
    }
    // item 909
    status = {
        type : "wlabel",
        id : "status",
        text : " "
    }
    // item 905
    ok = {
        signalId : "logonOk",
        type : "wbutton",
        text : "MES_LOGIN",
        style : {background: "Coral", color: "white"}
    }
    // item 907
    return {
        type : "page",
        padding : 10,
        style : {background: "white"},
        kids : [title, username, password, forgot, status, ok]
    }
}

function buildLogonGui() {
    var cancel, forgot, ok, password, status, username
    // item 346
    username = {
        type : "edit",
        editType : "text",
        water : translate("MES_USERNAME"),
        id : "username"
    }
    // item 347
    password = {
        type : "edit",
        editType : "password",
        water : translate("MES_PASSWORD"),
        id : "password"
    }
    // item 376
    forgot = {
        type : "custom",
        builder : makeRecoverLink
    }
    // item 378
    status = {
        type : "wlabel",
        id : "status",
        text : " "
    }
    // item 348
    ok = {
        signalId : "logonOk",
        type : "wbutton",
        text : "MES_LOGIN",
        style : {background: "Coral", color: "white"}
    }
    // item 349
    cancel = {
        signalId : "logonCancel",
        type : "wbutton",
        text : "MES_CANCEL",
        style : {background:DarkBackground, color:"white"}
    }
    // item 350
    return {
        type : "page",
        padding : 10,
        style : {background: "white"},
        kids : [username, password, forgot, status, ok, cancel]
    }
}

function buildMenuGui() {
    var buttStyle, diagrams, docs, hPadding, homeButton, language, lefts, logon, main, prices, register, rights, user
    // item 535
    lefts = []
    rights = []
    // item 537
    homeButton = {
        signalId : "home",
        type : "image_button",
        image : getLogoImage(),
        tooltip : "MES_HOMEPAGE",
        style : {},
        vPadding : 0,
        hPadding : 0,
        width : 185,
        height : 40
    }
    // item 538
    lefts.push(homeButton)
    // item 546
    hPadding = 10
    // item 542
    buttStyle = {}
    // item 539
    language = {
        signalId : "language",
        type : "image_button",
        image : "earth.png",
        tooltip : "MES_LANGUAGE",
        style : {},
        vPadding : 5,
        hPadding : 5,
        width : 30,
        height : 30
    }
    // item 541
    prices = {
        signalId : "prices",
        type : "text_button",
        text : "MES_PRICES",
        style : buttStyle,
        vPadding : 9,
        hPadding : hPadding
    }
    // item 543
    logon = {
        signalId : "login",
        type : "text_button",
        text : "MES_LOGIN",
        style : buttStyle,
        vPadding : 9,
        hPadding : hPadding
    }
    // item 544
    register = {
        signalId : "signup",
        type : "text_button",
        text : "MES_SIGNUP",
        style : buttStyle,
        vPadding : 9,
        hPadding : hPadding
    }
    // item 545
    docs = {
        signalId : "documentation",
        type : "text_button",
        text : "MES_DOCUMENTATION",
        style : buttStyle,
        vPadding : 9,
        hPadding : hPadding
    }
    // item 1005
    main = {
        signalId : "home",
        type : "text_button",
        text : "MES_HOMEPAGE",
        style : buttStyle,
        vPadding : 9,
        hPadding : hPadding
    }
    // item 559
    user = {
        signalId : "user",
        type : "text_button",
        text : gUserId,
        style : buttStyle,
        vPadding : 9,
        hPadding : hPadding,
        raw : true
    }
    // item 560
    diagrams = {
        signalId : "diagrams",
        type : "text_button",
        text : "MES_DOCUMENTS",
        style : buttStyle,
        vPadding : 9,
        hPadding : hPadding
    }
    // item 561
    if (gUserId) {
        // item 564
        rights.push(language)
        rights.push(user)
        rights.push(diagrams)
    } else {
        // item 540
        rights.push(language)
        rights.push(logon)
        rights.push(register)
    }
    // item 1189
    if (onPremises) {
        
    } else {
        // item 1192
        rights.push(docs)
        rights.push(prices)
    }
    // item 1006
    rights.push(main)
    // item 931
    selectActive(
        rights,
        gSection,
        "textMenuItem",
        "textMenuItemSelected"
    )
    // item 536
    return {
        type : "hdock",
        lefts : lefts,
        rights : rights,
        height : 40,
        style : {}
    }
}

function buildMobGui() {
    var homeButton, lefts, menu, rights
    // item 639
    lefts = []
    rights = []
    // item 641
    homeButton = {
        signalId : "home",
        type : "image_button",
        image : getLogoImage(),
        tooltip : "MES_HOMEPAGE",
        style : {},
        vPadding : 0,
        hPadding : 0,
        width : 185,
        height : 40
    }
    // item 642
    lefts.push(homeButton)
    // item 643
    menu = {
        signalId : "menu",
        type : "image_button",
        image : "red-menu.png",
        style : {},
        vPadding : 5,
        hPadding : 5,
        width : 30,
        height : 30
    }
    // item 644
    rights.push(menu)
    // item 640
    return {
        type : "hdock",
        lefts : lefts,
        rights : rights,
        height : 40,
        style : {}
    }
}

function buildMobileMenu() {
    var diagrams, drakon, examples, homeButton, items, language, lefts, logon, main, menu, page, prices, register, rights, started, style, top, user
    // item 703
    lefts = []
    rights = []
    // item 705
    homeButton = {
        signalId : "home",
        type : "image_button",
        image : getLogoImage(),
        tooltip : "MES_HOMEPAGE",
        style : {},
        vPadding : 0,
        hPadding : 0,
        width : 185,
        height : 40
    }
    // item 706
    lefts.push(homeButton)
    // item 707
    menu = {
        signalId : "closeMenu",
        type : "image_button",
        image : "red-cross.png",
        style : {},
        vPadding : 5,
        hPadding : 5,
        width : 30,
        height : 30
    }
    // item 708
    rights.push(menu)
    // item 704
    top = {
        type : "hdock",
        lefts : lefts,
        rights : rights,
        height : 40,
        style : {}
    }
    // item 709
    style = {
        color : "#990000"
    }
    // item 723
    started = {
        signalId : "started",
        type : "wbutton",
        style : style,
        text : "MES_STARTED"
    }
    // item 724
    examples = {
        signalId : "examples",
        type : "wbutton",
        style : style,
        text : "MES_EXAMPLES"
    }
    // item 725
    drakon = {
        signalId : "drakon",
        type : "wbutton",
        style : style,
        text : "MES_ABOUT_DRAKON"
    }
    // item 837
    main = {
        signalId : "home",
        type : "wbutton",
        text : "MES_HOMEPAGE",
        style : style
    }
    // item 711
    language = {
        signalId : "langMob",
        type : "wbutton",
        text : "MES_LANGUAGE",
        style : style
    }
    // item 712
    prices = {
        signalId : "prices",
        type : "wbutton",
        text : "MES_PRICES",
        style : style
    }
    // item 713
    logon = {
        signalId : "login",
        type : "wbutton",
        text : "MES_LOGIN",
        style : style
    }
    // item 714
    register = {
        signalId : "signup",
        type : "wbutton",
        text : "MES_SIGNUP",
        style : style
    }
    // item 727
    user = {
        signalId : "userMob",
        type : "wbutton",
        text : gUserId,
        style : style,
        raw : true
    }
    // item 728
    diagrams = {
        signalId : "diagrams",
        type : "wbutton",
        text : "MES_DOCUMENTS",
        style : style
    }
    // item 733
    items = [language, main]
    // item 729
    if (gUserId) {
        // item 732
        items.push(diagrams)
        items.push(user)
    } else {
        // item 726
        items.push(register)
        items.push(logon)
    }
    // item 1193
    if (onPremises) {
        
    } else {
        // item 734
        items.push(prices)
        items.push(started)
        items.push(examples)
        items.push(drakon)
    }
    // item 932
    selectActive(
        items,
        gSection,
        "textMenuItem",
        "textMenuItemSelected"
    )
    // item 735
    page = {
        type : "page",
        kids : items
    }
    // item 736
    return {
        type : "vdock",
        top : top,
        center : page
    }
}

function buildSignupDivGui() {
    var accept, chars, email, kids, ok, password, password2, status, title, titleStyle, username
    // item 968
    titleStyle = {
        fontSize : "150%",
        fontWeight : "bold",
        textAlign : "center",
        margin : "10px",
        color : "#990000"
    }
    // item 967
    title = {
        type : "wlabel",
        text : "MES_SIGNUP",
        style : titleStyle
    }
    // item 1057
    chars = {
        type : "wlabel",
        text : "MES_CHARACTERS"
    }
    // item 961
    username = {
        type : "edit",
        editType : "text",
        water : translate("MES_USERNAME"),
        id : "username"
    }
    // item 979
    email = {
        type : "edit",
        editType : "text",
        water : translate("MES_EMAIL"),
        id : "email"
    }
    // item 962
    password = {
        type : "edit",
        editType : "password",
        water : translate("MES_PASSWORD"),
        id : "password"
    }
    // item 980
    password2 = {
        type : "edit",
        editType : "password",
        water : translate("MES_REPEAT_PASSWORD"),
        id : "password2"
    }
    // item 966
    status = {
        type : "wlabel",
        id : "signup_status",
        text : " "
    }
    // item 965
    accept = {
        type : "custom",
        builder : makeAccept
    }
    // item 963
    ok = {
        signalId : "signupOk",
        id : "signupOk",
        type : "wbutton",
        text : "MES_CREATE_FREE",
        className : "disabled_button"
    }
    // item 1244
    if (Config.EMAIL_SIGNUP) {
        // item 1247
        kids = [title, chars, username, email, status]
    } else {
        // item 981
        kids = [title, chars, username, email,
        	password, password2, status]
    }
    // item 1198
    if (onPremises) {
        
    } else {
        // item 1197
        kids.push(accept)
    }
    // item 1196
    kids.push(ok)
    // item 964
    return {
        type : "page",
        padding : 10,
        style : {background: "white"},
        kids : kids
    }
}

function createDesktopMenu() {
    var parent01, ui
    // item 627
    parent01 = destroyDesktopMenu()
    // item 611
    ui = buildMenuGui()
    // item 612
    globs.widgets01 = new DraWidgets(
        window,
        document,
        translate,
        1000,
        "/static/"
    )
    // item 614
    globs.widgets01.onEvent = onEvent
    // item 613
    globs.root01 = globs.widgets01.createWidget(parent01, ui)
    // item 673
    resizeDesktop()
}

function createLogonDiv() {
    var div, ui
    // item 887
    div = get("form")
    div.innerHTML = ""
    // item 883
    ui = buildLogonDivGui()
    // item 884
    globs.logonWidgets = new DraWidgets(
        window,
        document,
        translate,
        3000,
        "/static/"
    )
    // item 886
    globs.logonWidgets.onEvent = onEvent
    // item 885
    globs.logonRoot = globs.logonWidgets.createWidget(
        div,
        ui
    )
    // item 888
    resizeLogonDiv()
    // item 937
    get("username_edit").onkeydown = onUserDown
    get("password_edit").onkeydown = onPassDown
}

function createMobileMainMenu() {
    var div, ui
    // item 743
    show("ui", "none")
    // item 738
    div = get("mobile_menu")
    div.innerHTML = ""
    showDiv(div, "block")
    // item 737
    ui = buildMobileMenu()
    // item 739
    globs.mmWidgets = new DraWidgets(
        window,
        document,
        translate,
        748000,
        "/static/"
    )
    // item 741
    globs.mmWidgets.onEvent = onEvent
    // item 740
    globs.mmRoot = globs.mmWidgets.createWidget(
        div,
        ui
    )
    // item 742
    resizeMobileMainMenu()
    // item 832
    pushNavState(null)
}

function createMobileMenu() {
    var parent02, ui
    // item 635
    parent02 = destroyMobileMenu()
    // item 631
    ui = buildMobGui()
    // item 632
    globs.widgets02 = new DraWidgets(
        window,
        document,
        translate,
        2000,
        "/static/"
    )
    // item 634
    globs.widgets02.onEvent = onEvent
    // item 633
    globs.root02 = globs.widgets02.createWidget(parent02, ui)
    // item 674
    resizeMobile()
}

function createPopupList(items) {
    // item 126
    var div = HtmlUtils.createPopup()
    // item 127
    div.className = "popup"
    div.style.background = "white"
    // item 1280001
    var _ind128 = 0;
    var _col128 = items;
    var _len128 = _col128.length;
    while (true) {
        // item 1280002
        if (_ind128 < _len128) {
            
        } else {
            break;
        }
        // item 1280004
        var item = _col128[_ind128];
        // item 130
        addPopupItem(div, item)
        // item 1280003
        _ind128++;
    }
    // item 131
    return div
}

function createSignupDiv() {
    var div, ui
    // item 947
    div = get("form")
    div.innerHTML = ""
    // item 943
    ui = buildSignupDivGui()
    // item 944
    globs.signupWidgets = new DraWidgets(
        window,
        document,
        translate,
        11000,
        "/static/"
    )
    // item 946
    globs.signupWidgets.onEvent = onEvent
    // item 945
    globs.signupRoot = globs.signupWidgets.createWidget(
        div,
        ui
    )
    // item 948
    resizeSignupDiv()
    // item 1204
    if (onPremises) {
        // item 1207
        enableSignupOk()
    } else {
        // item 1040
        disableSignupOk()
    }
}

function destroyDesktopMenu() {
    var parent01
    // item 620
    globs.widgets01 = null
    globs.root01 = null
    // item 618
    parent01 = document.getElementById("menu01")
    parent01.innerHTML = ""
    // item 619
    return parent01
}

function destroyMobileMainMenu() {
    // item 756
    globs.mmWidgets = null
    globs.mmRoot = null
    // item 754
    get("mobile_menu").innerHTML = ""
    show("mobile_menu", "none")
    // item 755
    show("ui", "block")
}

function destroyMobileMenu() {
    var parent02
    // item 626
    globs.widgets02 = null
    globs.root02 = null
    // item 624
    parent02 = document.getElementById("menu02")
    parent02.innerHTML = ""
    // item 625
    return parent02
}

function disableSignupOk() {
    var button
    // item 1018
    button = get("signupOk")
    // item 1019
    button.className = "disabled_button"
}

function enableSignupOk() {
    var button
    // item 1013
    button = get("signupOk")
    // item 1014
    button.className = "default_button"
}

function get(id) {
    // item 54
    var element = document.getElementById(id)
    // item 51
    if (element) {
        // item 55
        return element
    } else {
        // item 56
        throw Error("Element '" + id + "' not found")
    }
}

function getLanguageNeutral() {
    var languages, path, pos
    // item 302
    path = window.location.pathname
    // item 309
    languages = ["en", "ru"]
    // item 3100001
    var _ind310 = 0;
    var _col310 = languages;
    var _len310 = _col310.length;
    while (true) {
        // item 3100002
        if (_ind310 < _len310) {
            
        } else {
            // item 312
            return path
        }
        // item 3100004
        var language = _col310[_ind310];
        // item 303
        pos = path.indexOf("/" + language)
        // item 304
        if (pos == -1) {
            
        } else {
            // item 307
            return path.substring(0, pos + 1)
        }
        // item 3100003
        _ind310++;
    }
}

function getLanguagePopupItems() {
    var english, items, russian
    // item 814
    english = {
        text : "English",
        code : switchToEnglish
    }
    // item 815
    russian = {
        text : "Russian",
        code : switchToRussian
    }
    // item 816
    items = [english, russian]
    // item 813
    return items
}

function getLogoImage() {
    var logoImage
    // item 1216
    if (onPremises) {
        // item 1220
        logoImage = "branding-text-img-s.png"
    } else {
        // item 1219
        logoImage = "logo-text-img-s.png"
    }
    // item 1221
    return logoImage
}

function getRef() {
    var search
    // item 1261
    search = Utils.parseSearch(
        window.location.search
    )
    // item 1259
    return search.ref
}

function getUserPopupItems() {
    var goToUserAccount, items, logout, logoutItem, user
    // item 863
    goToUserAccount = function() {
        goTo("/account")
    }
    // item 864
    logout = function() {
        logonCtrl.logout()
    }
    // item 858
    user = {
        text : "MES_USER_ACCOUNT",
        code : goToUserAccount
    }
    // item 859
    logoutItem = {
        text : "Logout",
        code : logout
    }
    // item 860
    items = [user, logoutItem]
    // item 862
    return items
}

function goTo(url) {
    // item 221
    window.location.href = url
}

function goToDashboard() {
    // item 1251
    goTo("/ide/dashboard")
}

function goToSpaces() {
    // item 394
    goTo("/ide/spaces")
}

function hideLogon() {
    // item 413
    logonCtrl.stopped = true
    // item 411
    globs.logonData = null
    // item 412
    HtmlUtils.hidePopup()
}

function hidePopup() {
    // item 86
    HtmlUtils.hidePopup()
}

function initCookies() {
    var nothing, ref
    // item 267
    if (gUserId) {
        // item 274
        HtmlUtils.setCookie("language", gLanguage)
    } else {
        // item 270
        if (userAcceptedCookies()) {
            
        } else {
            // item 273
            show("cookie_warning", "block")
        }
    }
    // item 284
    ref = getRef()
    // item 285
    if (ref) {
        // item 288
        nothing = function() {}
        // item 289
        HtmlUtils.sendPost(
            "/api/set_ref",
            {ref: ref},
            nothing,
            nothing
        )
    }
}

function insertVideo(div) {
    // item 1228
    var width, height
    // item 1229
    if (isMobile()) {
        // item 1233
        width = 320
        height = 180
    } else {
        // item 1232
        width = 688
        height = 387
    }
    // item 1242
    var videoId = div.getAttribute("videoId")
    var url = "https://www.youtube.com/embed/" + 
    	videoId
    // item 1243
    div.innerHTML = ""
    // item 1227
    var iframe = make(div, "iframe")
    iframe.width = width
    iframe.height = height
    iframe.src = url
    iframe.frameborder = "0"
    iframe.allowfullscreen = true
}

function insertVideos() {
    // item 1238
    var divs = document.getElementsByClassName("vidos")
    // item 12390001
    var _ind1239 = 0;
    var _col1239 = divs;
    var _len1239 = _col1239.length;
    while (true) {
        // item 12390002
        if (_ind1239 < _len1239) {
            
        } else {
            break;
        }
        // item 12390004
        var div = _col1239[_ind1239];
        // item 1241
        insertVideo(div)
        // item 12390003
        _ind1239++;
    }
}

function isMobile() {
    // item 331
    return window.innerWidth < MobileWidth
}

function loadFont(font, target) {
    var fontSpec, onSuccess
    // item 1112
    onSuccess = function() {
    	try {
    		console.log("font loaded", font)
    		target.onData(null)
    	} catch (e) {
    		console.error(e)
    	}
    }
    // item 1070
    fontSpec = makeFontSpec2(
        font.italic,
        font.bold
    )
    // item 1071
    font = new FontFaceObserver(
        font.family,
        fontSpec
    )
    // item 1069
    font.load(null, 10000).then(
        onSuccess,
        onSuccess
    )
}

function loadFonts() {
    var bold, fonts, italic, machine, normal, target
    // item 1117
    target = {
        onData : onResize,
        onError : onResize
    }
    // item 1118
    machine = new FontLoader
    machine.target = target
    // item 1135
    normal = {
        family : "Ubuntu",
        italic : false,
        bold : false
    }
    // item 1136
    bold = {
        family : "Ubuntu",
        italic : false,
        bold : true
    }
    // item 1137
    italic = {
        family : "Ubuntu",
        italic : true,
        bold : false
    }
    // item 1138
    fonts = [normal, italic, bold]
    // item 1139
    machine.onData(fonts)
}

function make(parent, tag) {
    // item 139
    var element = document.createElement(tag)
    parent.appendChild(element)
    // item 141
    //element.ontouchstart = prevent
    //element.ontouchmove = prevent
    //element.ontouchend = prevent
    // item 140
    return element
}

function makeAccept(div) {
    // item 992
    var table = make(div, "table")
    var tr = make(table, "tr")
    var td1 = make(tr, "td")
    var td2 = make(tr, "td")
    table.style.marginTop = "10px"
    table.style.marginBottom = "10px"
    td2.style.paddingLeft = "10px"
    // item 990
    var check = make(td1, "input")
    check.type = "checkbox"
    // item 994
    check.onchange = updateSignupButton
    // item 993
    var span = make(td2, "div")
    span.innerHTML = translate("MES_I_AGREE")
    span.style.marginLeft = "10px"
    span.style.display = "inline-block"
    // item 991
    check.id = "accepted"
}

function makeFontSpec2(italic, bold) {
    var result, style
    // item 1124
    result = {}
    // item 1125
    style = ""
    // item 1126
    if (italic) {
        // item 1129
        result.style = "italic"
    }
    // item 1130
    if (bold) {
        // item 1133
        result.weight = "bold"
    }
    // item 1134
    return result
}

function makeIB(parent) {
    // item 147
    var div = make(parent, "div")
    div.style.display = "inline-block"
    // item 148
    return div
}

function makeRecoverLink(div) {
    var a
    // item 373
    a = make(div, "a")
    // item 374
    a.href = "/reset"
    // item 375
    HtmlUtils.setDivText(
        a,
        translate("MES_FORGOT_PASSWORD")
    )
}

function makeSeparator(list) {
    // item 121
    var item = {
    	type: "separator"
    }
    // item 122
    list.push(item)
}

function makeTextListItem(list, textId, action, id, image) {
    // item 114
    var item = {
    	text: translate(textId),
    	code: action,
    	id: id,
    	image: image
    }
    // item 115
    list.push(item)
}

function onEvent(evt, type, widget, rowId, cellId) {
    var _sw1950000_ = 0;
    // item 1950000
    _sw1950000_ = widget.signalId;
    // item 1950001
    if (_sw1950000_ === "language") {
        // item 203
        showLanguagesPopup(widget)
    } else {
        // item 1950002
        if (_sw1950000_ === "langMob") {
            // item 795
            showLanguagesPopupAt(
                evt.clientX,
                evt.clientY
            )
        } else {
            // item 1950003
            if (_sw1950000_ === "user") {
                // item 226
                showUserPopup(widget)
            } else {
                // item 1950004
                if (_sw1950000_ === "userMob") {
                    // item 840
                    showUserPopupAt(
                        evt.clientX,
                        evt.clientY
                    )
                } else {
                    // item 1950005
                    if (_sw1950000_ === "prices") {
                        // item 229
                        goTo("/prices")
                    } else {
                        // item 1950006
                        if (_sw1950000_ === "diagrams") {
                            // item 232
                            goToDashboard()
                        } else {
                            // item 1950007
                            if (_sw1950000_ === "documentation") {
                                // item 248
                                showDocumentationPopup(widget)
                            } else {
                                // item 1950008
                                if (_sw1950000_ === "signup") {
                                    // item 252
                                    goTo("/signup")
                                } else {
                                    // item 1950009
                                    if (_sw1950000_ === "login") {
                                        // item 351
                                        showLogon(widget)
                                    } else {
                                        // item 1950010
                                        if (_sw1950000_ === "signupOk") {
                                            // item 1035
                                            startSignup()
                                        } else {
                                            // item 1950011
                                            if (_sw1950000_ === "logonOk") {
                                                // item 362
                                                startLogon()
                                            } else {
                                                // item 1950012
                                                if (_sw1950000_ === "logonCancel") {
                                                    // item 365
                                                    hideLogon()
                                                } else {
                                                    // item 1950013
                                                    if (_sw1950000_ === "menu") {
                                                        // item 677
                                                        globs.resizer.showMenu()
                                                    } else {
                                                        // item 1950014
                                                        if (_sw1950000_ === "closeMenu") {
                                                            // item 775
                                                            globs.resizer.hideMenu()
                                                        } else {
                                                            // item 1950015
                                                            if (_sw1950000_ === "started") {
                                                                // item 783
                                                                goTo("/docs/start")
                                                            } else {
                                                                // item 1950016
                                                                if (_sw1950000_ === "examples") {
                                                                    // item 786
                                                                    goTo("/docs/examples")
                                                                } else {
                                                                    // item 1950017
                                                                    if (_sw1950000_ === "drakon") {
                                                                        // item 789
                                                                        goTo("/docs/drakon")
                                                                    } else {
                                                                        // item 1950018
                                                                        if (_sw1950000_ === "home") {
                                                                            // item 792
                                                                            goTo("/")
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

function onLoad() {
    // item 290
    initCookies()
    // item 831
    pushNavState({})
    // item 1164
    loadFonts()
}

function onLoadLogon() {
    // item 877
    pushNavState({})
    // item 876
    createLogonDiv()
    // item 1165
    loadFonts()
}

function onLoadSignup() {
    // item 973
    pushNavState({})
    // item 972
    createSignupDiv()
    // item 1004
    globs.signupCtrl = new Signup(
        window,
        document,
        translate,
        "username",
        "email",
        "password",
        "password2",
        "signup_status",
        disableSignupOk,
        onSignupSuccess,
        enableSignupOk,
        false
    )
    // item 1041
    globs.signupCtrl.update = onResize
    // item 1166
    loadFonts()
}

function onLogonCompleted() {
    var ref
    // item 1262
    ref = getRef()
    // item 1263
    if (ref) {
        // item 1260
        goTo(ref)
    } else {
        // item 1266
        goToDashboard()
    }
}

function onPassDown(evt) {
    var _sw4550000_ = 0;
    // item 4550000
    _sw4550000_ = evt.keyCode;
    // item 4550001
    if (_sw4550000_ === 13) {
        // item 463
        startLogon()
    } else {
        // item 4550002
        if (_sw4550000_ === 27) {
            // item 464
            hideLogon()
        }
    }
}

function onResize() {
    // item 668
    if (isMobile()) {
        // item 672
        globs.resizer.resizeMobile()
    } else {
        // item 671
        globs.resizer.resizeDesktop()
    }
    // item 10890001
    if (gSection === "login") {
        // item 1088
        resizeLogonDiv()
    } else {
        // item 10890002
        if (gSection === "signup") {
            // item 1097
            resizeSignupDiv()
        }
    }
}

function onSignupSuccess(data) {
    var url
    // item 1025
    url = "/ide/doc/" + data.id + "/1"
    // item 1026
    goTo(url)
}

function onUserDown(evt) {
    var _sw4400000_ = 0;
    // item 4400000
    _sw4400000_ = evt.keyCode;
    // item 4400001
    if (_sw4400000_ === 13) {
        // item 448
        get("password_edit").focus()
    } else {
        // item 4400002
        if (_sw4400000_ === 27) {
            // item 449
            hideLogon()
        }
    }
}

function pushNavState(data) {
    // item 1186
    if (gSection == "user") {
        
    } else {
        // item 830
        Nav.pushState(
            data,
            document.title,
            window.location.href
        )
    }
}

function putExamples(targetId, examples) {
    var a, img, size, target
    // item 1058
    size = 160
    // item 1047
    target = get(targetId)
    // item 10480001
    var _ind1048 = 0;
    var _col1048 = examples;
    var _len1048 = _col1048.length;
    while (true) {
        // item 10480002
        if (_ind1048 < _len1048) {
            
        } else {
            break;
        }
        // item 10480004
        var example = _col1048[_ind1048];
        // item 1050
        a = make(target, "a")
        a.className = "example_item"
        // item 1051
        img = make(a, "img")
        img.width = size
        img.height = size
        img.src = "/static/" + example.image
        img.style.verticalAlign = "bottom"
        // item 1052
        if (gUserId) {
            // item 1056
            a.href = example.ex
        } else {
            // item 1055
            a.href = example.url
        }
        // item 10480003
        _ind1048++;
    }
}

function reloadPage() {
    var url
    // item 297
    url = getLanguageNeutral()
    // item 177
    window.location.href = url
}

function resizeDesktop() {
    var docWidth, left, width
    // item 650
    docWidth = document.body.clientWidth
    // item 651
    if (docWidth >= BigWidth) {
        // item 648
        left = Math.round((docWidth - BigWidth)/2)
        width = BigWidth
    } else {
        // item 654
        left = 0
        width = docWidth
    }
    // item 649
    globs.widgets01.resizeWidget(
        globs.root01,
        left,
        0,
        width,
        40
    )
}

function resizeLogon() {
    var div, height, logonWidgets, root, rootId, rootWidget
    // item 427
    if (globs.logonData) {
        // item 426
        logonWidgets = globs.logonData.widgets
        rootId = globs.logonData.rootId
        root = globs.logonData.rootDiv
        // item 423
        rootWidget = logonWidgets.getWidget(
            rootId
        )
        // item 424
        height = rootWidget.measureHeight(
            LogonWidth
        )
        // item 425
        root.style.width = LogonWidth + "px"
        root.style.height = height + "px"
        // item 422
        logonWidgets.resizeWidget(
            rootId,
            0,
            0,
            LogonWidth,
            height
        )
        // item 432
        div = get(globs.logonData.parentId)
        // item 431
        HtmlUtils.showUnder(div, root)
        // item 465
        get("username_edit").focus()
    }
    // item 936
    resizeLogonDiv()
}

function resizeLogonDiv() {
    var docHeight, docWidth, left
    // item 933
    if (globs.logonWidgets) {
        // item 899
        docWidth = document.body.clientWidth
        docHeight = window.innerHeight
        left = (docWidth - 320) / 2
        // item 898
        globs.logonWidgets.resizeWidget(
            globs.logonRoot,
            left,
            40,
            320,
            docHeight - 40
        )
    }
}

function resizeMobile() {
    var docWidth
    // item 667
    docWidth = document.body.clientWidth
    // item 666
    globs.widgets02.resizeWidget(
        globs.root02,
        0,
        0,
        docWidth,
        40
    )
}

function resizeMobileMainMenu() {
    var docHeight, docWidth
    // item 750
    docWidth = document.body.clientWidth
    docHeight = document.documentElement.clientHeight
    // item 749
    globs.mmWidgets.resizeWidget(
        globs.mmRoot,
        0,
        0,
        docWidth,
        docHeight
    )
}

function resizeSignupDiv() {
    var docHeight, docWidth, left
    // item 955
    if (globs.signupWidgets) {
        // item 954
        docWidth = document.body.clientWidth
        docHeight = window.innerHeight
        left = (docWidth - 320) / 2
        // item 953
        globs.signupWidgets.resizeWidget(
            globs.signupRoot,
            left,
            40,
            320,
            docHeight - 40
        )
    }
}

function selectActive(items, current, normal, selected) {
    // item 9180001
    var _ind918 = 0;
    var _col918 = items;
    var _len918 = _col918.length;
    while (true) {
        // item 9180002
        if (_ind918 < _len918) {
            
        } else {
            break;
        }
        // item 9180004
        var item = _col918[_ind918];
        // item 924
        if ((item.type == "text_button") || (item.type == "wbutton")) {
            // item 920
            if (item.signalId == current) {
                // item 923
                item.className = selected
            } else {
                // item 922
                item.className = normal
            }
        }
        // item 9180003
        _ind918++;
    }
}

function setLanguage(lang) {
    var data, noop, reload
    // item 183
    HtmlUtils.setCookie("language", lang)
    // item 184
    noop = function() {}
    // item 185
    reload = reloadPage
    // item 186
    if (gUserId) {
        // item 190
        data = {
            language : lang
        }
        // item 191
        HtmlUtils.sendPost(
            "/api/theme",
            data,
            reload,
            noop
        )
    } else {
        // item 189
        reload()
    }
}

function show(id, display) {
    // item 62
    var div = get(id)
    showDiv(div, display)
}

function showDiv(div, display) {
    // item 296
    div.style.display = display
}

function showDocumentationPopup(widget) {
    var div, drakon, examples, goToDrakon, goToExamples, goToStart, items, started
    // item 377
    goToStart = function() {
        goTo("/docs/start")
    }
    // item 245
    goToExamples = function() {
        goTo("/docs/examples")
    }
    // item 246
    goToDrakon = function() {
        goTo("/docs/drakon")
    }
    // item 238
    started = {
        text : "MES_STARTED",
        code : goToStart
    }
    // item 239
    examples = {
        text : "MES_EXAMPLES",
        code : goToExamples
    }
    // item 243
    drakon = {
        text : "MES_ABOUT_DRAKON",
        code : goToDrakon
    }
    // item 240
    items = [started, examples, drakon]
    // item 242
    div = get(widget.id)
    // item 241
    showPopupList(div, items)
}

function showLanguagesPopup(widget) {
    var div, items
    // item 192
    items = getLanguagePopupItems()
    // item 194
    div = get(widget.id)
    // item 193
    showPopupList(div, items)
}

function showLanguagesPopupAt(x, y) {
    var items
    // item 817
    items = getLanguagePopupItems()
    // item 818
    showPopupListAt(x, y, items)
}

function showLogon(widget) {
    var logonWidgets, root, rootId, ui
    // item 332
    if ((isMobile()) || (gSection == "signup")) {
        // item 335
        goTo("/logon")
    } else {
        // item 337
        root = HtmlUtils.createPopup()
        // item 338
        root.className = "popup"
        root.style.background = "white"
        // item 345
        ui = buildLogonGui()
        // item 339
        logonWidgets = new DraWidgets(
            window,
            document,
            translate,
            7700,
            "../static/"
        )
        // item 341
        logonWidgets.onEvent = onEvent
        // item 340
        rootId = logonWidgets.createWidget(
            root,
            ui
        )
        // item 434
        get("username_edit").onkeydown = onUserDown
        get("password_edit").onkeydown = onPassDown
        // item 406
        globs.logonData = {
            rootId : rootId,
            rootDiv : root,
            widgets : logonWidgets,
            parentId : widget.id
        }
        // item 418
        resizeLogon()
    }
}

function showPopupList(parentDiv, items) {
    // item 204
    new ToolTip(window, document).hideTooptip()
    // item 93
    var div = createPopupList(items)
    // item 92
    HtmlUtils.showUnder(parentDiv, div)
}

function showPopupListAt(x, y, items) {
    // item 808
    new ToolTip(window, document).hideTooptip()
    // item 807
    var div = createPopupList(items)
    // item 806
    HtmlUtils.setPosCorrected(x, y, div)
}

function showUserPopup(widget) {
    var div, items
    // item 213
    items = getUserPopupItems()
    // item 215
    div = get(widget.id)
    // item 214
    showPopupList(div, items)
}

function showUserPopupAt(x, y) {
    var items
    // item 865
    items = getUserPopupItems()
    // item 866
    showPopupListAt(x, y, items)
}

function startLogon() {
    // item 389
    logonCtrl.logon(
        "username_edit",
        "password_edit",
        "status",
        onLogonCompleted
    )
}

function startSignup() {
    // item 1201
    if ((onPremises) || (get("accepted").checked)) {
        // item 1036
        globs.signupCtrl.signup(
            "front page"
        )
    }
}

function startTimer(target, ms) {
    var onTimer
    // item 1172
    onTimer = function() {
    	try {
    		target.timer()
    	} catch (e) {
    		console.error(e)
    	}
    }
    // item 1173
    window.setTimeout(
        onTimer,
        ms
    )
}

function stateCallback(data, onCompleted) {
    // item 833
    if (data) {
        // item 836
        globs.resizer.hideMenu()
    }
    // item 824
    onCompleted()
}

function switchToEnglish() {
    // item 171
    setLanguage('en-us')
}

function switchToRussian() {
    // item 166
    setLanguage('ru')
}

function updateSignupButton() {
    // item 998
    if (get("accepted").checked) {
        // item 1002
        enableSignupOk()
    } else {
        // item 1003
        disableSignupOk()
    }
}

function userAcceptedCookies() {
    // item 258
    if (HtmlUtils.getCookie("cookies_accepted")) {
        // item 257
        return true
    } else {
        // item 261
        return false
    }
}

function Resizer() {
  var _self = this;
  _self.type_name = "Resizer";
  _self.state = "Start";
  _self.hideMenu = function(msg) {
    var _state_ = _self.state;
    if (_state_ == "MobileMenu") {
      return Resizer_MobileMenu_hideMenu(_self, msg);
    }
    return null;
  };
  _self.resizeDesktop = function(msg) {
    var _state_ = _self.state;
    if (_state_ == "Start") {
      return Resizer_Start_resizeDesktop(_self, msg);
    }
    else if (_state_ == "Desktop") {
      return Resizer_Desktop_resizeDesktop(_self, msg);
    }
    else if (_state_ == "Mobile") {
      return Resizer_Mobile_resizeDesktop(_self, msg);
    }
    else if (_state_ == "MobileMenu") {
      return Resizer_MobileMenu_resizeDesktop(_self, msg);
    }
    return null;
  };
  _self.resizeMobile = function(msg) {
    var _state_ = _self.state;
    if (_state_ == "Start") {
      return Resizer_Start_resizeMobile(_self, msg);
    }
    else if (_state_ == "Desktop") {
      return Resizer_Desktop_resizeMobile(_self, msg);
    }
    else if (_state_ == "Mobile") {
      return Resizer_Mobile_resizeMobile(_self, msg);
    }
    else if (_state_ == "MobileMenu") {
      return Resizer_MobileMenu_resizeMobile(_self, msg);
    }
    return null;
  };
  _self.showMenu = function(msg) {
    var _state_ = _self.state;
    if (_state_ == "Mobile") {
      return Resizer_Mobile_showMenu(_self, msg);
    }
    return null;
  };
}

function FontLoader() {
  var _self = this;
  _self.type_name = "FontLoader";
  _self.state = "Idle";
  _self.onData = function(msg) {
    var _state_ = _self.state;
    if (_state_ == "Idle") {
      return FontLoader_Idle_onData(_self, msg);
    }
    else if (_state_ == "Loading") {
      return FontLoader_Loading_onData(_self, msg);
    }
    else if (_state_ == "Waiting") {
      return FontLoader_Waiting_default(_self, msg);
    }
    return null;
  };
  _self.onError = function(msg) {
    var _state_ = _self.state;
    if (_state_ == "Idle") {
      return FontLoader_Idle_onError(_self, msg);
    }
    else if (_state_ == "Loading") {
      return FontLoader_Loading_onError(_self, msg);
    }
    else if (_state_ == "Waiting") {
      return FontLoader_Waiting_default(_self, msg);
    }
    return null;
  };
  _self.timer = function(msg) {
    var _state_ = _self.state;
    if (_state_ == "Waiting") {
      return FontLoader_Waiting_timer(_self, msg);
    }
    return null;
  };
}


globs.resizer = new Resizer()
logonCtrl.onError = resizeLogon

this.onLoad = onLoad
this.onLoadSignup = onLoadSignup
this.onLoadLogon = onLoadLogon
this.onResize = onResize

this.putExamples = putExamples
this.acceptCookies = acceptCookies
this.stateCallback = stateCallback

this.insertVideos = insertVideos

}
