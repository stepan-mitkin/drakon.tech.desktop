function PayView(window, document, translate, prices) {


var SPACE = " ".charCodeAt(0)

var goodKeys = {}
goodKeys["ArrowLeft"] = true
goodKeys["ArrowRight"] = true
goodKeys["Home"] = true
goodKeys["End"] = true
goodKeys["Backspace"] = true
goodKeys["Delete"] = true
goodKeys["Tab"] = true
	

// Autogenerated with DRAKON Editor 1.32


function Network() {
    
}

function Screen() {
    
}

function addOption(selectId, value, text) {
    // item 548
    var div = get(selectId)
    // item 549
    var option = make(div, "option")
    option.value = value
    HtmlUtils.setDivText(option, text)
}

function addTrace(action, tag) {
    // item 484
    return function() {
    	CallTrace.add(tag, [])
    	action()
    }
}

function agreeChanged(checked) {
    // item 1016
    if (checked) {
        // item 1019
        HtmlUtils.show("create_account_grey", "none")
        HtmlUtils.show("create_account", "block")
    } else {
        // item 1020
        HtmlUtils.show("create_account_grey", "block")
        HtmlUtils.show("create_account", "none")
    }
}

function beginCompletePayEx(orderRef, onSuccess, onError) {
    // item 1048
    CallTrace.add(
    	"beginCompletePayEx",
    	[orderRef]
    )
    // item 1045
    var data = {
    	order_ref: orderRef
    }
    // item 1047
    var call = function() {
      sendPost(
        "/api/px2_complete",
        data,
        onSuccess,
        onError
      )
    }
    // item 1052
    window.setTimeout(call, prices.completeDelay * 1000)
}

function beginConfirmWithCoupon(coupon, onSuccess, onError) {
    // item 439
    CallTrace.add(
    	"beginConfirmWithCoupon",
    	[coupon]
    )
    // item 418
    var data = {
    	coupon: coupon
    }
    // item 404
    sendPost(
    	"/api/confirm_coupon",
    	data,
    	onSuccess,
    	onError
    )
}

function beginConfirmWithPay(productId, users, onSuccess, onError) {
    // item 512
    CallTrace.add(
    	"beginConfirmWithPay",
    	[productId, users]
    )
    // item 511
    var data = {
    	product_id: productId,
    	users: users
    }
    // item 510
    sendPost(
    	"/api/confirm_paid",
    	data,
    	onSuccess,
    	onError
    )
}

function beginFree(trans_id, onSuccess, onError) {
    // item 440
    CallTrace.add(
    	"beginFree",
    	[trans_id]
    )
    // item 431
    var data = {
    	trans_id: trans_id
    }
    // item 430
    sendPost(
    	"/api/get_for_free",
    	data,
    	onSuccess,
    	onError
    )
}

function beginGetLicense(onSuccess) {
    // item 441
    CallTrace.add(
    	"beginGetLicense",
    	[]
    )
    // item 358
    sendGet(
    	"/api/license",
    	onSuccess,
    	panicOnError
    )
}

function beginPay(payment, onSuccess, onError) {
    // item 442
    CallTrace.add(
    	"beginPay",
    	[payment.trans_id]
    )
    // item 437
    sendPost(
    	"/api/get_for_card",
    	payment,
    	onSuccess,
    	onError
    )
}

function beginPayexCreate(data, onSuccess, onError) {
    // item 1040
    CallTrace.add(
    	"beginPayexCreate",
    	[data.trans_id]
    )
    // item 1039
    sendPost(
    	"/api/payex_create",
    	data,
    	onSuccess,
    	onError
    )
}

function beginPx2Start(productId, users, onSuccess, onError) {
    // item 1066
    CallTrace.add(
    	"beginPx2Start",
    	[productId, users]
    )
    // item 1065
    var data = {
    	product_id: productId,
    	users: users,
    	ref: gReferer
    }
    // item 1064
    sendPost(
    	"/api/px2_start",
    	data,
    	onSuccess,
    	onError
    )
}

function beginUseCoupon(coupon, onSuccess, onError) {
    // item 1074
    CallTrace.add(
    	"beginUseCoupon",
    	[coupon]
    )
    // item 1073
    var data = {
    	coupon: coupon
    }
    // item 1072
    sendPost(
    	"/api/use_coupon",
    	data,
    	onSuccess,
    	onError
    )
}

function checkCardNumberType(type, checked) {
    // item 960
    var length = checked.plain.length
    var first = checked.plain[0]
    // item 9520001
    if (type === "visa") {
        // item 976
        if ((first == "4") && (((length == 13) || (length == 16)) || (length == 19))) {
            // item 975
            return true
        } else {
            // item 978
            return false
        }
    } else {
        // item 9520002
        if (type === "mastercard") {
            // item 969
            if ((first == "2") || (first == "5")) {
                // item 968
                return length == 16
            } else {
                // item 971
                return false
            }
        } else {
            // item 9520003
            if ((type === "amex") && (first == "3")) {
                // item 961
                return length == 15
            } else {
                // item 964
                return false
            }
        }
    }
}

function clearCard() {
    // item 934
    get("card_type").value = "none"
    get("card_number").value = ""
    get("expire_month").value = "none"
    get("expire_year").value = "none"
    get("cvv2").value = ""
    get("first_name").value = ""
    get("last_name").value = ""
}

function digitsOnly(text) {
    // item 768
    var pattern = /^[0-9]+$/
    return pattern.test(text)
}

function get(id) {
    // item 44
    var element = document.getElementById(id)
    // item 41
    if (element) {
        // item 45
        return element
    } else {
        // item 46
        throw Error("Element '" + id + "' not found")
    }
}

function getCardNumber() {
    // item 990
    return get("card_number").value
}

function getCardType() {
    // item 994
    return get("card_type").value
}

function getKeyCode(evt) {
    // item 913
    if (evt.key) {
        // item 916
        return evt.key.charCodeAt(0)
    } else {
        // item 805
        return evt.keyCode || evt.charCode || 0
    }
}

function hide(id) {
    // item 327
    HtmlUtils.show(id, "none")
}

function hideWorking() {
    // item 288
    hide("working")
}

function init() {
    // item 552
    var i
    // item 5500001
    i = 1;
    while (true) {
        // item 5500002
        if (i <= 12) {
            
        } else {
            break;
        }
        // item 542
        var month = Utils.pad(i, 2)
        addOption("expire_month", month, month)
        // item 5500003
        i++;
    }
    // item 5540001
    i = 2016;
    while (true) {
        // item 5540002
        if (i <= 2030) {
            
        } else {
            break;
        }
        // item 553
        var year = i.toString()
        addOption("expire_year", year, year)
        // item 5540003
        i++;
    }
    // item 610
    registerChange("card_type", onCardTypeChange)
    registerChange("card_number", onCardNumberChange)
    registerChange("cvv2", onCardCvv2Change)
    registerChange("expire_month", onCardMonthChange)
    registerChange("expire_year", onCardYearChange)
    registerChange("first_name", onCardFirstNameChange)
    registerChange("last_name", onCardLastNameChange)
    // item 828
    //get("card_number1").onkeydown = function(evt) {
    //	onNumberPartKeyDown(evt, "card_number2")
    //}
    // item 625
    registerInput("card_number", onCardNumberInput)
    // item 683
    registerKeyPress("card_number", onCardNumberKeyPress)
    registerKeyPress("cvv2", onCardCvv2KeyPress)
}

function isDigit(evt) {
    // item 900
    var code = getKeyCode(evt)
    // item 872
    if ((code >= 48) && (code <= 57)) {
        // item 852
        return true
    } else {
        // item 876
        return false
    }
}

function isGoodAnyway(evt) {
    // item 907
    if ((evt.key) && (evt.key in goodKeys)) {
        // item 906
        return true
    } else {
        // item 910
        return false
    }
}

function isOkForNumber(evt) {
    // item 922
    if ((isDigit(evt)) || (isGoodAnyway(evt))) {
        // item 928
        return true
    } else {
        // item 929
        return false
    }
}

function logon() {
    // item 823
    logonCtrl.logon(
    	"userNameLogin",
    	"passLogin",
    	"logon_message",
    	ctrl.onLogon
    )
}

function make(parent, tag) {
    // item 34
    var element = document.createElement(tag)
    parent.appendChild(element)
    // item 35
    return element
}

function makeError(action) {
    // item 454
    return function(data) {
    	CallTrace.add(
    		"error",
    		[data]
    	)
    	action(data)
    }
}

function makeErrorMessage(data) {
    // item 366
    var message = Utils.makeErrorMessage(data)
    // item 367
    return translate(message)
}

function makeSuccess(action) {
    // item 448
    return function(data) {
    	CallTrace.add(
    		"success",
    		[data]
    	)
    	action(data)
    }
}

function onCardCvv2Change(evt) {
    var _sw6580000_ = 0;
    // item 653
    var value = evt.target.value
    // item 654
    if ((value) && (digitsOnly(value))) {
        // item 657
        value = value.trim()
        // item 6580000
        _sw6580000_ = value.length;
        // item 6580001
        if ((_sw6580000_ === 3) || (_sw6580000_ === 4)) {
            // item 667
            setGreen("cvv2_border")
        } else {
            // item 668
            setBackground("cvv2_border", "none")
        }
    } else {
        // item 668
        setBackground("cvv2_border", "none")
    }
}

function onCardCvv2Input(evt) {
    // item 799
    onCardCvv2Change(evt)
}

function onCardCvv2KeyPress(evt) {
    // item 895
    var keyCode = getKeyCode(evt)
    // item 890
    if (isOkForNumber(evt)) {
        // item 889
        return true
    } else {
        // item 898
        HtmlUtils.preventDefaultHandling(evt)
        // item 897
        return false
    }
}

function onCardFirstNameChange(evt) {
    // item 729
    var value = evt.target.value
    // item 730
    if (value) {
        // item 733
        value = value.trim()
        // item 736
        if (value) {
            // item 734
            setGreen("first_name_border")
        } else {
            // item 735
            setBackground("first_name_border", "none")
        }
    } else {
        // item 735
        setBackground("first_name_border", "none")
    }
}

function onCardLastNameChange(evt) {
    // item 737
    var value = evt.target.value
    // item 738
    if (value) {
        // item 741
        value = value.trim()
        // item 744
        if (value) {
            // item 742
            setGreen("last_name_border")
        } else {
            // item 743
            setBackground("last_name_border", "none")
        }
    } else {
        // item 743
        setBackground("last_name_border", "none")
    }
}

function onCardMonthChange(evt) {
    // item 643
    if (evt.target.value == "none") {
        // item 647
        setRed("expire_month_border")
    } else {
        // item 646
        setGreen("expire_month_border")
    }
}

function onCardNumberChange(evt) {
    // item 711
    var value = getCardNumber()
    var type = getCardType()
    // item 712
    if (value) {
        // item 715
        var number = Utils.checkCardNumber(value)
        // item 727
        if (number) {
            // item 728
            setCardNumber(number.formatted)
            // item 985
            if (checkCardNumberType(type, number)) {
                // item 725
                setGreen("card_number_border")
            } else {
                // item 726
                setBackground("card_number_border", "none")
            }
        } else {
            // item 726
            setBackground("card_number_border", "none")
        }
    } else {
        // item 726
        setBackground("card_number_border", "none")
    }
}

function onCardNumberInput(evt) {
    // item 1003
    var value = getCardNumber()
    var type = getCardType()
    var input = evt.target
    // item 882
    var nonSpaces = Utils.caretToNonSpaces(
    	value,
    	input.selectionStart || 0
    )
    // item 880
    var pretty = Utils.prettyPrintCard(
    	value
    ).formatted
    // item 1004
    setCardNumber(pretty)
    // item 887
    var caret = Utils.nonSpacesToCaret(
    	pretty,
    	nonSpaces
    )
    // item 888
    input.selectionStart = caret
    input.selectionEnd = caret
    // item 941
    var checked = Utils.checkCardNumber(value)
    // item 944
    if ((checked) && (checkCardNumberType(type, checked))) {
        // item 942
        setGreen("card_number_border")
    } else {
        // item 943
        setBackground("card_number_border", "none")
    }
}

function onCardNumberKeyPress(evt) {
    // item 691
    var keyCode = getKeyCode(evt)
    // item 685
    if ((isOkForNumber(evt)) || (keyCode == SPACE)) {
        // item 684
        return true
    } else {
        // item 694
        HtmlUtils.preventDefaultHandling(evt)
        // item 693
        return false
    }
}

function onCardPay() {
    // item 518
    CallTrace.add(
    	"onCardPay",
    	[]
    )
    // item 745
    var type = HtmlUtils.getValue("card_type")
    var number = HtmlUtils.getValue("card_number")
    var cvv2 = HtmlUtils.getValue("cvv2").trim()
    var month = HtmlUtils.getValue("expire_month")
    var year = HtmlUtils.getValue("expire_year")
    var first = HtmlUtils.getValue("first_name").trim()
    var last = HtmlUtils.getValue("last_name").trim()
    // item 746
    if (type == "none") {
        // item 749
        setRed("card_type_border")
        // item 783
        HtmlUtils.setText(
        	"card_error",
        	translate("ERR_FILL_ALL_REQUIRED")
        )
    } else {
        // item 758
        var checkedNumber = Utils.checkCardNumber(number)
        // item 785
        if ((checkedNumber) && (checkCardNumberType(type, checkedNumber))) {
            // item 789
            if (((digitsOnly(cvv2)) && (cvv2.length >= 3)) && (cvv2.length <= 4)) {
                // item 750
                if (month == "none") {
                    // item 753
                    setRed("expire_month_border")
                    // item 783
                    HtmlUtils.setText(
                    	"card_error",
                    	translate("ERR_FILL_ALL_REQUIRED")
                    )
                } else {
                    // item 754
                    if (year == "none") {
                        // item 757
                        setRed("expire_year_border")
                        // item 783
                        HtmlUtils.setText(
                        	"card_error",
                        	translate("ERR_FILL_ALL_REQUIRED")
                        )
                    } else {
                        // item 775
                        if (first) {
                            // item 779
                            if (last) {
                                // item 784
                                HtmlUtils.setText(
                                	"card_error",
                                	""
                                )
                                // item 527
                                ctrl.onCardPay(
                                	type,
                                	checkedNumber.plain,
                                	parseInt(year),
                                	parseInt(month),
                                	parseInt(cvv2),
                                	first,
                                	last
                                )
                            } else {
                                // item 782
                                setRed("last_name_border")
                                // item 783
                                HtmlUtils.setText(
                                	"card_error",
                                	translate("ERR_FILL_ALL_REQUIRED")
                                )
                            }
                        } else {
                            // item 778
                            setRed("first_name_border")
                            // item 783
                            HtmlUtils.setText(
                            	"card_error",
                            	translate("ERR_FILL_ALL_REQUIRED")
                            )
                        }
                    }
                }
            } else {
                // item 792
                setRed("cvv2_border")
                // item 783
                HtmlUtils.setText(
                	"card_error",
                	translate("ERR_FILL_ALL_REQUIRED")
                )
            }
        } else {
            // item 788
            setRed("card_number_border")
            // item 783
            HtmlUtils.setText(
            	"card_error",
            	translate("ERR_FILL_ALL_REQUIRED")
            )
        }
    }
}

function onCardTypeChange(evt) {
    // item 1009
    var type = getCardType()
    // item 626
    if (type == "none") {
        // item 642
        setRed("card_type_border")
    } else {
        // item 629
        setGreen("card_type_border")
    }
    // item 1010
    onCardNumberChange()
}

function onCardYearChange(evt) {
    // item 648
    if (evt.target.value == "none") {
        // item 652
        setRed("expire_year_border")
    } else {
        // item 651
        setGreen("expire_year_border")
    }
}

function onChooseContinue() {
    // item 467
    CallTrace.add(
    	"onChooseContinue",
    	[]
    )
    // item 393
    var coupon =  HtmlUtils.getValue("coupon")
    // item 394
    ctrl.onChooseContinue(coupon)
}

function onError(errorMsg, url, lineNumber, column, errorObj) {
    // item 490
    var trace = CallTrace.reset()
    
    console.log(trace)
    
    var data = {
    	type: "crash",
    	errorMsg: errorMsg,
    	errorUrl: url,
    	errorObj: errorObj,
    	trace: trace,
    	section: "buy",
    	url: window.location.href
    }
    
    var url = "/api/feedback/"
    
    HtmlUtils.sendPost(
    	url,
    	data,
    	function(){},
    	function(){}
    )
    
    panic(translate("ERR_CLIENT"))
}

function onLoginPassDown(evt) {
    // item 816
    if (evt.keyCode == 13) {
        // item 819
        logon()
    }
}

function onLoginUserDown(evt) {
    // item 824
    if (evt.keyCode == 13) {
        // item 827
        get("passLogin").focus()
    }
}

function onNumUsers(evt) {
    // item 468
    CallTrace.add(
    	"onNumUsers",
    	[evt]
    )
    // item 200
    var value = get("choose_team_users").value
    // item 258
    ctrl.changeUsers(value)
}

function onNumberPartKeyDown(evt, nextId) {
    // item 871
    HtmlUtils.setValue("card_number4", evt.keyCode)
    // item 853
    if (evt.key == "ArrowRight") {
        // item 870
        console.log(evt.target.selectionStart)
    } else {
        // item 856
        if (((evt.key == "ArrowLeft") || (!(isDigit(evt)))) || (!(evt.target.value.length == 4))) {
            
        } else {
            // item 866
            if (nextId) {
                // item 865
                var next = get(nextId)
                next.focus()
                next.value = evt.key
            }
            // item 869
            HtmlUtils.preventDefaultHandling(evt)
        }
    }
}

function onProductChanged() {
    // item 81
    var product = HtmlUtils.getValue("product")
    // item 469
    CallTrace.add(
    	"onProductChanged",
    	[product]
    )
    // item 177
    ctrl.showProduct(product)
}

function onSignup() {
    // item 470
    CallTrace.add(
    	"onSignup",
    	[]
    )
    // item 148
    showProductCfg()
}

function panic(message) {
    // item 343
    HtmlUtils.show("wide", "none")
    HtmlUtils.show("working", "none")
    HtmlUtils.show("panic", "block")
    // item 344
    HtmlUtils.setText("panic_message", message)
    // item 346
    DTools.print("panic", message)
}

function panicOnError(data) {
    // item 352
    var message = makeErrorMessage(data)
    // item 353
    panic(message)
}

function printAmount(amount) {
    // item 1058
    return Utils.printAmount(
    	amount,
    	prices.currency
    )
}

function redirect(url) {
    // item 424
    window.location = url
}

function registerChange(id, callback) {
    // item 623
    var div = get(id)
    // item 624
    div.addEventListener(
    	"change",
    	callback,
    	false
    )
}

function registerInput(id, callback) {
    // item 616
    var div = get(id)
    // item 617
    div.addEventListener(
    	"input",
    	callback,
    	false
    )
}

function registerKeyPress(id, callback) {
    // item 681
    var div = get(id)
    // item 682
    div.addEventListener(
    	"keypress",
    	callback,
    	false
    )
}

function reportSaleToCarrot(data) {
    // item 1080
    if (window.carrotquest) {
        // item 1084
        window.carrotquest.track(
        	"$order_paid",
        	{"$order_id": data.trans_id}
        )
        // item 1090
        var total = null
        // item 1091
        if ((data.type == "coupon") || (!("total_num" in data))) {
            
        } else {
            // item 1094
            total = data.total_num
        }
        // item 1095
        if (total == null) {
            
        } else {
            // item 1086
            window.carrotquest.identify([
            	{
            		op: "update_or_create",
            		key: "$last_payment",
            		value: total
            	}
            ])
        }
    }
}

function sendGet(url, onSuccess, onError) {
    // item 466
    HtmlUtils.sendGet(
    	url,
    	makeSuccess(onSuccess),
    	makeError(onError)
    )
}

function sendPost(url, data, onSuccess, onError) {
    // item 460
    HtmlUtils.sendPost(
    	url,
    	data,
    	makeSuccess(onSuccess),
    	makeError(onError)
    )
}

function setBackground(id, color) {
    // item 539
    var div = get(id)
    // item 540
    div.style.background = color
}

function setCardNumber(number) {
    // item 999
    var input = get("card_number")
    input.value = number || ""
}

function setGreen(id) {
    // item 640
    setBackground(id, "#00ff00")
}

function setRed(id) {
    // item 641
    setBackground(id, "#ff0000")
}

function setTeamValues(price, sum, remaining, mva, total, error) {
    // item 208
    if (error) {
        // item 211
        HtmlUtils.setText("choose_team_price", price)
        HtmlUtils.setText("choose_team_mva", "")
        HtmlUtils.setText("choose_team_total", "")
        // item 212
        HtmlUtils.setText("choose_error", translate(error))
        // item 395
        HtmlUtils.show("disabled_continue", "block")
        HtmlUtils.show("choose_continue", "none")
    } else {
        // item 206
        HtmlUtils.setText("choose_team_price", price)
        HtmlUtils.setText("choose_team_mva", mva)
        HtmlUtils.setText("choose_team_total", total)
        // item 213
        HtmlUtils.setText("choose_error", "")
        // item 396
        HtmlUtils.show("disabled_continue", "none")
        HtmlUtils.show("choose_continue", "block")
    }
}

function setUser(name) {
    // item 471
    CallTrace.add(
    	"setUser",
    	[name]
    )
    // item 318
    if (name) {
        // item 321
        var target = get("user_name")
        // item 398
        target.innerHTML = ""
        // item 316
        var a = make(target, "a")
        a.href = "/account"
        // item 317
        var div = make(a, "div")
        HtmlUtils.setDivText(div, name)
        div.className = "topMenuItem"
        div.style.whiteSpace = "nowrap"
    }
}

function showCard(fields) {
    // item 541
    setBackground("card_type_border", "none")
    setBackground("card_number_border", "none")
    setBackground("cvv2_border", "none")
    setBackground("expire_month_border", "none")
    setBackground("expire_year_border", "none")
    setBackground("first_name_border", "none")
    setBackground("last_name_border", "none")
    // item 504
    CallTrace.add(
    	"showCard",
    	[fields]
    )
    // item 503
    HtmlUtils.setText("card_product", fields.product)
    HtmlUtils.setText("card_users", fields.users)
    HtmlUtils.setText("card_total", fields.total)
    // item 497
    showScreen("card")
}

function showConfirm(free, fields) {
    // item 472
    CallTrace.add(
    	"showConfirm",
    	[free, fields]
    )
    // item 410
    hideWorking()
    // item 413
    if (free) {
        // item 416
        hide("confirm_pay")
        HtmlUtils.show("confirm_free", "block")
        hide("paysys")
        HtmlUtils.setText("confirm_mva", printAmount(0))
        HtmlUtils.setText("confirm_total", printAmount(0))
    } else {
        // item 412
        hide("confirm_free")
        HtmlUtils.show("confirm_pay", "block")
        HtmlUtils.show("paysys", "block")
        HtmlUtils.setText("confirm_mva", fields.mva)
        HtmlUtils.setText("confirm_total", fields.total)
    }
    // item 417
    HtmlUtils.setText("confirm_product", fields.product)
    HtmlUtils.setText("confirm_max_diagrams", fields.maxDiagrams)
    HtmlUtils.setText("confirm_max_projects", fields.maxSpaces)
    HtmlUtils.setText("confirm_price", fields.price)
    HtmlUtils.setText("confirm_users", fields.users)
    HtmlUtils.setText("confirm_sum", fields.sum)
    HtmlUtils.setText("confirm_remaining", fields.remaining)
    // item 411
    showScreen("confirm")
}

function showError(headerId, textId) {
    // item 526
    hideWorking()
    // item 524
    var header = translate(headerId)
    var text = translate(textId)
    HtmlUtils.setText("failure_header", header)
    HtmlUtils.setText("failure_text", text)
    // item 525
    showScreen("failure")
}

function showExtended(price, sum, remaining, mva, total) {
    // item 473
    CallTrace.add(
    	"showExtended",
    	[price, sum, remaining, total]
    )
    // item 936
    clearCard()
    // item 371
    HtmlUtils.show("extended_price", "block")
    HtmlUtils.show("team_price", "none")
    // item 528
    HtmlUtils.setText("choose_ext_price", price)
    HtmlUtils.setText("choose_ext_mva", mva)
    HtmlUtils.setText("choose_ext_total", total)
    // item 397
    HtmlUtils.show("disabled_continue", "none")
    HtmlUtils.show("choose_continue", "block")
}

function showOneButton(message, button, action) {
    // item 474
    CallTrace.add(
    	"showOneButton",
    	[message, button]
    )
    // item 301
    HtmlUtils.hideChildren("dialog")
    HtmlUtils.show("one_button", "block")
    HtmlUtils.setText("one_button_text", message)
    HtmlUtils.setText("one_button_button", button)
    // item 302
    get("one_button_button").onclick = action
}

function showProduct(productId) {
    // item 475
    CallTrace.add(
    	"showProduct",
    	[productId]
    )
    // item 388
    HtmlUtils.setValue("product", productId)
}

function showProductCfg() {
    // item 149
    HtmlUtils.hideChildren("dialog")
    // item 150
    HtmlUtils.show("choose", "block")
    // item 163
    updateProductTable()
}

function showScreen(id) {
    // item 476
    CallTrace.add(
    	"showScreen",
    	[id]
    )
    // item 308
    HtmlUtils.hideChildren("dialog")
    // item 309
    HtmlUtils.show(id, "block")
    // item 3280001
    if (id === "login") {
        // item 336
        get("userNameLogin").focus()
    } else {
        // item 3280002
        if (id === "signup") {
            // item 899
            signupCtrl.showCaptcha()
            // item 337
            get("userName_edit").focus()
        } else {
            // item 3280003
            if (id === "choose") {
                // item 939
                clearCard()
            }
        }
    }
}

function showSuccess(data) {
    // item 1027
    HtmlUtils.setText("success_trans_id", data.trans_id)
    // item 1028
    if (data.type == "card") {
        // item 1032
        HtmlUtils.show("success_receipt", "block")
        // item 1033
        HtmlUtils.setText("success_date", data.date)
        HtmlUtils.setText("success_product", data.product_name)
        HtmlUtils.setText("success_users", data.users)
        HtmlUtils.setText("success_total", data.total)
        // item 1049
        if (prices.paysys == "payex") {
            // item 1051
            HtmlUtils.setText("success_trans_number", data.trans_number)
        }
    } else {
        // item 1031
        HtmlUtils.show("success_receipt", "none")
    }
    // item 1026
    showScreen("success")
    // item 1085
    reportSaleToCarrot(data)
}

function showTeam(users, price, sum, remaining, mva, total, error) {
    // item 477
    CallTrace.add(
    	"showTeam",
    	[users, price, sum, 
             remaining, mva, total, error]
    )
    // item 935
    clearCard()
    // item 378
    HtmlUtils.show("extended_price", "none")
    HtmlUtils.show("team_price", "block")
    // item 379
    HtmlUtils.setValue("choose_team_users", users)
    // item 382
    setTeamValues(
    	price,
    	sum,
    	remaining,
    	mva,
    	total,
    	error
    )
}

function showTwoButtons(message, upper, upperAction, lower, lowerAction) {
    // item 478
    CallTrace.add(
    	"showTwoButtons",
    	[message, upper, lower]
    )
    // item 294
    HtmlUtils.hideChildren("dialog")
    HtmlUtils.show("two_buttons", "block")
    HtmlUtils.setText("two_buttons_text", message)
    HtmlUtils.setText("two_buttons_upper", upper)
    HtmlUtils.setText("two_buttons_lower", lower)
    // item 295
    get("two_buttons_upper").onclick = addTrace(upperAction, "upper")
    get("two_buttons_lower").onclick = addTrace(lowerAction, "lower")
}

function showWorking() {
    // item 284
    HtmlUtils.show("working", "block")
}

function updateProductTable() {
    var _sw1690000_ = 0;
    // item 1690000
    _sw1690000_ = globals.productId;
    // item 1690001
    if (_sw1690000_ === "extended") {
        // item 175
        showExtended()
    } else {
        // item 1690002
        if (_sw1690000_ === "team") {
            
        } else {
            // item 1690003
            throw "Unexpected switch value: " + _sw1690000_;
        }
        // item 176
        showTeam()
    }
}


this.onProductChanged = onProductChanged
this.onNumUsers = onNumUsers
this.showWorking = showWorking
this.hideWorking = hideWorking
this.showScreen = showScreen
this.showTwoButtons = showTwoButtons
this.showOneButton = showOneButton
this.setUser = setUser
this.beginGetLicense = beginGetLicense
this.showExtended = showExtended
this.showTeam = showTeam
this.showProduct = showProduct
this.onChooseContinue = onChooseContinue
this.beginConfirmWithCoupon = beginConfirmWithCoupon
this.showConfirm = showConfirm
this.redirect = redirect
this.panicOnError = panicOnError
this.beginFree = beginFree
this.beginPay = beginPay
this.onError = onError
this.beginConfirmWithPay = beginConfirmWithPay
this.showCard = showCard
this.onCardPay = onCardPay
this.showError = showError
this.init = init
this.onLoginUserDown = onLoginUserDown
this.onLoginPassDown = onLoginPassDown
this.logon = logon
this.agreeChanged = agreeChanged
this.showSuccess = showSuccess
this.beginPayexCreate = beginPayexCreate
this.beginCompletePayEx = beginCompletePayEx

this.beginPx2Start = beginPx2Start
this.beginUseCoupon = beginUseCoupon

}
