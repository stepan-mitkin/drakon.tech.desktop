function Account(window, document, translate, language) {

var self = this

var gAccount = null
var gLicense = null

var gTabs = {}
var gLabels = null

var gDiagram = false

// Autogenerated with DRAKON Editor 1.32


function activateTab(name) {
    // item 1030001
    var _ind103 = 0;
    var _col103 = gTabs;
    var _keys103 = Object.keys(_col103); 
    var _len103 = _keys103.length;
    while (true) {
        // item 1030002
        if (_ind103 < _len103) {
            
        } else {
            break;
        }
        // item 1030004
        var key = _keys103[_ind103]; var value = _col103[key];
        // item 108
        var tab = get(value.tab)
        // item 105
        if (key == name) {
            // item 109
            HtmlUtils.show(value.view, "block")
            // item 112
            tab.className = "left_button active_left"
        } else {
            // item 110
            HtmlUtils.show(value.view, "none")
            // item 111
            tab.className = "left_button inactive_left"
        }
        // item 1030003
        _ind103++;
    }
}

function addCell(tr, text, nowrap) {
    // item 377
    var cell = make(tr, "td")
    // item 386
    cell.style.textAlign = "center"
    // item 382
    if (nowrap) {
        // item 385
        noWrap(cell)
    }
    // item 379
    if (text) {
        // item 378
        HtmlUtils.setDivText(cell, text)
    }
}

function beginChangePassword(data, onSuccess, onError) {
    // item 266
    HtmlUtils.sendPost(
    	"/api/pass",
    	data,
    	onSuccess,
    	onError
    )
}

function beginDeleteUser(onSuccess) {
    // item 177
    HtmlUtils.sendPost(
    	"/api/delete_user",
    	{},
    	onSuccess,
    	onSuccess
    )
}

function beginGetAccount(onSuccess) {
    // item 12
    HtmlUtils.sendGet(
    	"/api/account",
    	onSuccess,
    	panicOnError
    )
}

function beginGetLicense(onSuccess) {
    // item 19
    HtmlUtils.sendGet(
    	"/api/license",
    	onSuccess,
    	panicOnError
    )
}

function beginGetOwnSpaces(onSuccess) {
    // item 157
    HtmlUtils.sendGet(
    	"/api/own_spaces",
    	onSuccess,
    	panicOnError
    )
}

function beginGetTheme(success, error) {
    // item 469
    var url = "/api/theme"
    // item 470
    HtmlUtils.sendGet(
    	url,
    	success,
    	error
    )
}

function beginGetTransactions(onSuccess) {
    // item 332
    HtmlUtils.sendGet(
    	"/api/transactions",
    	onSuccess,
    	panicOnError
    )
}

function beginLogout(onSuccess) {
    // item 68
    HtmlUtils.sendPost(
    	"/api/logout",
    	{},
    	onSuccess,
    	onSuccess
    )
}

function beginSaveTheme(data, success, error) {
    // item 476
    var url = "/api/theme"
    // item 477
    HtmlUtils.sendPost(
    	url,
    	data,
    	success,
    	error
    )
}

function beginStopSubscription(onSuccess) {
    // item 321
    HtmlUtils.sendPost(
    	"/api/stop_subscription",
    	{},
    	onSuccess,
    	panicOnError
    )
}

function beginUpdateUser(data, onSuccess, onError) {
    // item 236
    HtmlUtils.sendPost(
    	"/api/update_user",
    	data,
    	onSuccess,
    	onError
    )
}

function cancelDelete() {
    // item 132
    HtmlUtils.show("warning1", "none")
    HtmlUtils.show("warning2", "none")
    HtmlUtils.show("warning_sub", "none")
    // item 151
    activateTab("personal")
    // item 133
    HtmlUtils.show("ui", "block")
}

function changePassword() {
    // item 254
    HtmlUtils.setText("password_message", "")
    clearError("password")
    // item 241
    var old = HtmlUtils.getValue("old_pass")
    var pass = HtmlUtils.getValue("password")
    var pass2 = HtmlUtils.getValue("password2")
    // item 245
    var message = Utils.checkPassword(pass, pass2)
    // item 260
    if (message) {
        // item 252
        showFieldError(
        	"password",
        	message
        )
    } else {
        // item 257
          HtmlUtils.show("working", "block")
          HtmlUtils.show("ui", "none")
        // item 256
        var data = {
        	old_password: old,
        	new_password: pass
        }
        // item 253
        var onSuccess = function() {
          HtmlUtils.setText(
            "password_message",
            translate("MES_ALL_CHANGES_SAVED")
          )
          HtmlUtils.setValue("old_pass", "")
          HtmlUtils.setValue("password", "")
          HtmlUtils.setValue("password2", "")
          HtmlUtils.show("working", "none")
          HtmlUtils.show("ui", "block")
        }
        // item 255
        var onError = function(data) {
          HtmlUtils.setText(
            "password_message",
            translate(data.error)
          )
          HtmlUtils.show("working", "none")
          HtmlUtils.show("ui", "block")
        }
        // item 251
        beginChangePassword(
        	data,
        	onSuccess,
        	onError
        )
    }
}

function clearError(target) {
    // item 221
    var targetEr = makeErrorName(target)
    // item 222
    HtmlUtils.show(targetEr, "none")
    // item 223
    HtmlUtils.setText(targetEr, "")
    // item 224
    var element = document.getElementById(target)
    element.style.border = "solid 1px grey"
}

function delete1() {
    // item 144
    HtmlUtils.show("warning1", "none")
    HtmlUtils.show("working", "block")
    // item 143
    window.setTimeout(deleteStage2, 1000)
}

function delete2() {
    // item 150
    HtmlUtils.show("warning2", "none")
    HtmlUtils.show("working", "block")
    // item 178
    var onSuccess = function() {
    	window.location = "/"	
    }
    // item 179
    beginDeleteUser(onSuccess)
}

function deleteAccount() {
    // item 127
    HtmlUtils.show("ui", "none")
    HtmlUtils.show("working", "block")
    // item 126
    window.setTimeout(deleteStage1, 1000)
}

function deleteStage1() {
    // item 124
    HtmlUtils.show("working", "none")
    HtmlUtils.show("warning1", "block")
}

function deleteStage2() {
    // item 149
    beginGetOwnSpaces(showFinalWarning)
}

function get(id) {
    // item 92
    var element = document.getElementById(id)
    // item 89
    if (element) {
        // item 93
        return element
    } else {
        // item 94
        throw Error("Element '" + id + "' not found")
    }
}

function init() {
    var _sw4070000_ = 0;
    // item 113
    initTab("personal")
    initTab("language")
    initTab("password")
    initTab("subscription")
    // item 405
    HtmlUtils.setValue("language_combo", language)
    // item 421
    initYesNoLabels()
    // item 406
    var search = Utils.parseSearch(window.location.search)
    // item 521
    if (search.ref == "diagram") {
        // item 524
        gDiagram = true
    }
    // item 4070000
    _sw4070000_ = search.page;
    // item 4070001
    if (_sw4070000_ === "language") {
        // item 415
        activateTab("language")
    } else {
        // item 4070002
        if (_sw4070000_ === "subscription") {
            // item 548
            activateTab("subscription")
        } else {
            // item 114
            activateTab("personal")
        }
    }
    // item 5
    beginGetAccount(
    	onGetAccount
    )
    // item 493
    beginGetTheme(
    	setLabels,
    	function() {}
    )
}

function initTab(name) {
    // item 75
    var tabName = name + "_tab"
    var viewName = name + "_view"
    // item 76
    var tab = get(tabName)
    var view = get(viewName)
    // item 95
    var onClick = function() {
    	activateTab(name)
    }
    // item 96
    tab.onclick = onClick
    // item 97
    gTabs[name] = {
    	tab: tabName,
    	view: viewName
    }
}

function initYesNoLabels() {
    // item 420
    var labels = {
      "en-us": ["English",    "Yes",   "No",   "End"],
      "no":    ["Norsk",      "Ja",    "Nei",  "Slutt"],
      "ru":    ["Русский",    "Да",    "Нет",  "Конец"],
      "pl":    ["Polski",     "Tak",   "Nie",  "Koniec"],
      "sv":    ["Svenska",    "Ja",    "Nej",  "Slut"],
      "lt":    ["Lietuvių",   "Taip",  "Ne",   "Pabaiga"],
      "uk":    ["Українська", "Так",   "Нi",   "Кiнець"],
      "fi":    ["Suomi",      "Kyllä", "Ei",   "Loppu"],
      "ro":    ["Român",      "Da",    "Nu",   "Sfârșit"],
      "de":    ["Deutsch",    "Ja",    "Nein", "Ende"],
      "lv":    ["Latviešu",   "Jā",    "Nē",   "Beigas"],
      "nl":    ["Nederlands", "Ja",    "Nee",  "Einde"],
      "zh":    ["中文",        "是",    "否",    "结束"],
      "es":    ["Español",    "Si",    "No",   "Final"]
    }
    // item 426
    gLabels = labels
    // item 423
    var codes = Object.keys(labels)
    codes.sort()
    // item 422
    var combo = get("suggest_combo")
    // item 4240001
    var _ind424 = 0;
    var _col424 = codes;
    var _len424 = _col424.length;
    while (true) {
        // item 4240002
        if (_ind424 < _len424) {
            
        } else {
            break;
        }
        // item 4240004
        var code = _col424[_ind424];
        // item 428
        var row = labels[code]
        var text = row[0]
        // item 427
        var option = make(combo, "option")
        option.value = code
        HtmlUtils.setDivText(option, text)
        // item 4240003
        _ind424++;
    }
}

function languageSelected() {
    // item 401
    var language = HtmlUtils.getValue("language_combo")
    // item 402
    HtmlUtils.setCookie("language", language)
    // item 403
    var noop = function() {}
    var reload = function() {
        window.location.href = "/account?page=language"
    }
    // item 404
    HtmlUtils.sendPost(
    	"/api/theme",
    	{language: language},
    	reload,
    	noop
    )
}

function languageSuggested() {
    // item 433
    var code = HtmlUtils.getValue("suggest_combo")
    // item 437
    var yes, no, end
    // item 500
    if (code == "custom") {
        
    } else {
        // item 434
        if (code == "from_interface") {
            // item 438
            yes = ""
            no = ""
            end = ""
        } else {
            // item 439
            var row = gLabels[code]
            // item 440
            yes = row[1]
            no = row[2]
            end = row[3]
        }
        // item 441
        HtmlUtils.setValue("yes_text", yes)
        HtmlUtils.setValue("no_text", no)
        HtmlUtils.setValue("end_text", end)
    }
}

function logout() {
    // item 62
    var onSuccess = function() {
    	window.location = "/"	
    }
    // item 69
    beginLogout(onSuccess)
}

function make(parent, tag) {
    // item 82
    var element = document.createElement(tag)
    parent.appendChild(element)
    // item 83
    return element
}

function makeErrorMessage(data) {
    // item 40
    var message = Utils.makeErrorMessage(data)
    // item 41
    return translate(message)
}

function makeErrorName(name) {
    // item 209
    return name + "_error"
}

function noWrap(element) {
    // item 371
    element.style.whiteSpace = "nowrap"
}

function onGetAccount(data) {
    // item 54
    gAccount = data
    // item 230
    HtmlUtils.setValue("email", data.email)
    // item 57
    beginGetLicense(
    	onGetLicense
    )
}

function onGetLicense(data) {
    // item 56
    gLicense = data
    var total
    // item 393
    if (data.total) {
        // item 326
        total = printAmount(data, data.total)
    } else {
        // item 396
        total = translate("no")
    }
    // item 268
    HtmlUtils.setText("product_name", translate(data.product_name))
    HtmlUtils.setText("expiry", translate(data.expiry_str))
    HtmlUtils.setText("max_users", data.limits.max_users)
    HtmlUtils.setText("max_spaces", unlimit(data.limits.max_spaces))
    HtmlUtils.setText("max_diagrams", unlimit(data.limits.max_diagrams))
    HtmlUtils.setText("max_monthly", total)
    HtmlUtils.setText("next_payment", data.due || translate("no"))
    // item 287
    if (data.active) {
        // item 290
        HtmlUtils.show("active", "inline")
        // item 297
        if (data.product_id == "basic") {
            // item 299
            HtmlUtils.show("cancel_sub", "none")
        } else {
            // item 298
            HtmlUtils.show("cancel_sub", "block")
        }
    } else {
        // item 291
        HtmlUtils.show("inactive", "inline")
        // item 299
        HtmlUtils.show("cancel_sub", "none")
    }
    // item 553
    HtmlUtils.show("loading", "none")
    HtmlUtils.show("ui", "block")
    // item 549
    if (self.onLoaded) {
        // item 552
        window.setTimeout(
        	self.onLoaded,
        	1
        )
    }
}

function onGetTransactions(data) {
    // item 340
    if ((data.transactions) && (data.transactions.length > 0)) {
        // item 348
        var table = get("transactions")
        // item 3460001
        var _ind346 = 0;
        var _col346 = data.transactions;
        var _len346 = _col346.length;
        while (true) {
            // item 3460002
            if (_ind346 < _len346) {
                
            } else {
                break;
            }
            // item 3460004
            var tran = _col346[_ind346];
            // item 349
            var tr = make(table, "tr")
            // item 350
            addCell(
            	tr,
            	Utils.localizeDate(
            		tran.when_created,
            		translate
            	),
            	true
            )
            // item 361
            addCell(
            	tr,
            	translate(tran.type)
            )
            // item 363
            addCell(
            	tr,
            	translate(tran.details.product_id)
            )
            // item 364
            addCell(
            	tr,
            	tran.details.users
            )
            // item 387
            var amount
            // item 388
            if (tran.type == "coupon") {
                // item 391
                amount = ""
            } else {
                // item 392
                amount = printAmount(
                	tran.details,
                	tran.details.total
                )
            }
            // item 365
            addCell(
            	tr,
            	amount,
            	true
            )
            // item 3460003
            _ind346++;
        }
        // item 343
        HtmlUtils.show("yes_trans", "block")
        HtmlUtils.show("no_trans", "none")
    } else {
        // item 345
        HtmlUtils.show("yes_trans", "none")
        HtmlUtils.show("no_trans", "block")
    }
    // item 338
    HtmlUtils.show("loading", "none")
    HtmlUtils.show("ui", "block")
    // item 538
    if (self.onLoaded) {
        // item 541
        window.setTimeout(
        	self.onLoaded,
        	1
        )
    }
}

function onSaveYesNoSuccess() {
    // item 534
    HtmlUtils.setText(
        "language_message",
        translate("MES_ALL_CHANGES_SAVED")
      )
    // item 531
    if (gDiagram) {
        // item 537
        HtmlUtils.goBack()
    } else {
        // item 530
        HtmlUtils.show("working", "none")
        HtmlUtils.show("ui", "block")
    }
}

function panic(message) {
    // item 25
    HtmlUtils.show("ui", "none")
    HtmlUtils.show("working", "none")
    HtmlUtils.show("loading", "none")
    HtmlUtils.show("panic", "block")
    // item 26
    HtmlUtils.setText("panic_message", message)
}

function panicOnError(data) {
    // item 33
    var message = makeErrorMessage(data)
    // item 34
    panic(message)
}

function printAmount(data, amount) {
    // item 285
    amount = amount || 0
    // item 322
    if (data.currency) {
        // item 286
        return data.currency + " " + amount
    } else {
        // item 325
        return ""
    }
}

function savePersonal() {
    // item 227
    HtmlUtils.setText("personal_message", "")
    clearError("email")
    // item 184
    var email = HtmlUtils.getValue("email").trim()
    // item 188
    var message = null
    // item 185
    if (email) {
        // item 190
        if (Utils.checkEmail(email)) {
            // item 237
            HtmlUtils.show("working", "block")
            HtmlUtils.show("ui", "none")
            // item 229
            var data = {
            	email: email
            }
            // item 226
            var onSuccess = function() {
              HtmlUtils.setText(
                "personal_message",
                translate("MES_ALL_CHANGES_SAVED")
              )
              HtmlUtils.show("working", "none")
              HtmlUtils.show("ui", "block")
            }
            // item 228
            var onError = function(data) {
              HtmlUtils.setText(
                "personal_message",
                translate(data.error)
              )
              HtmlUtils.show("working", "none")
              HtmlUtils.show("ui", "block")
            }
            // item 194
            beginUpdateUser(
            	data,
            	onSuccess,
            	onError
            )
        } else {
            // item 192
            message = "ERR_BAD_EMAIL"
            // item 225
            showFieldError(
            	"email",
            	message
            )
        }
    } else {
        // item 189
        message = "ERR_EMAIL_EMPTY"
        // item 225
        showFieldError(
        	"email",
        	message
        )
    }
}

function saveYesNo() {
    // item 519
    HtmlUtils.setText("yes_error", "")
    HtmlUtils.setText("no_error", "")
    HtmlUtils.setText("end_error", "")
    // item 446
    var yes = HtmlUtils.getValue("yes_text").trim()
    var no = HtmlUtils.getValue("no_text").trim()
    var end = HtmlUtils.getValue("end_text").trim()
    // item 447
    if ((((yes) && (no)) && (end)) || (!(((yes) || (no)) || (end)))) {
        // item 487
        HtmlUtils.show("working", "block")
        HtmlUtils.show("ui", "none")
        // item 462
        var theme = {
            yes: yes,
            no: no,
            end: end
        }
        // item 486
        var onError = function(data) {
          HtmlUtils.setText(
            "language_message",
            translate(data.error)
          )
          HtmlUtils.show("working", "none")
          HtmlUtils.show("ui", "block")
        }
        // item 478
        beginSaveTheme(
        	theme,
        	onSaveYesNoSuccess,
        	onError
        )
    } else {
        // item 482
        var widget
        // item 457
        if (yes) {
            // item 459
            if (no) {
                // item 484
                widget = "end_error"
            } else {
                // item 483
                widget = "no_error"
            }
        } else {
            // item 463
            widget = "yes_error"
        }
        // item 520
        var message = translate("ERR_FIELD_EMPTY")
        HtmlUtils.setText(widget, message)
        HtmlUtils.show(widget, "block")
    }
}

function setLabels(data) {
    // item 494
    if (((data.yes) && (data.no)) && (data.end)) {
        // item 499
        HtmlUtils.setValue("yes_text", data.yes)
        HtmlUtils.setValue("no_text", data.no)
        HtmlUtils.setValue("end_text", data.end)
        // item 504
        var option = "custom"
        // item 5050001
        var _ind505 = 0;
        var _col505 = gLabels;
        var _keys505 = Object.keys(_col505); 
        var _len505 = _keys505.length;
        while (true) {
            // item 5050002
            if (_ind505 < _len505) {
                
            } else {
                break;
            }
            // item 5050004
            var code = _keys505[_ind505]; var row = _col505[code];
            // item 510
            var yes = row[1]
            var no = row[2]
            var end = row[3]
            // item 507
            if (((yes == data.yes) && (no == data.no)) && (yes == data.yes)) {
                // item 517
                option = code
                break;
            }
            // item 5050003
            _ind505++;
        }
        // item 518
        HtmlUtils.setValue("suggest_combo", option)
    } else {
        // item 503
        HtmlUtils.setValue("suggest_combo", "from_interface")
    }
}

function showFieldError(target, message) {
    // item 200
    var targetEr = makeErrorName(target)
    // item 202
    HtmlUtils.show(targetEr, "block")
    // item 201
    message = translate(message)
    HtmlUtils.setText(targetEr, message)
    // item 203
    var element = document.getElementById(target)
    element.style.border = "solid 1px grey"
    element.style.borderRight = "solid 5px red"
}

function showFinalWarning(data) {
    // item 164
    if (data.spaces) {
        // item 171
        data.spaces.sort()
        // item 169
        var list = get("shoot_list")
        // item 267
        list.innerHTML = ""
        // item 1670001
        var _ind167 = 0;
        var _col167 = data.spaces;
        var _len167 = _col167.length;
        while (true) {
            // item 1670002
            if (_ind167 < _len167) {
                
            } else {
                break;
            }
            // item 1670004
            var space_id = _col167[_ind167];
            // item 163
            var item = make(list, "li")
            HtmlUtils.setDivText(item, space_id)
            // item 1670003
            _ind167++;
        }
    }
    // item 170
    HtmlUtils.show("working", "none")
    HtmlUtils.show("warning2", "block")
}

function stop1() {
    // item 313
    HtmlUtils.show("warning_sub", "none")
    HtmlUtils.show("working", "block")
    // item 314
    var onSuccess = function() {
    	window.location = "/"	
    }
    // item 315
    beginStopSubscription(onSuccess)
}

function stopSubStage1() {
    // item 312
    HtmlUtils.show("working", "none")
    HtmlUtils.show("warning_sub", "block")
}

function stopSubscription() {
    // item 301
    HtmlUtils.show("ui", "none")
    HtmlUtils.show("working", "block")
    // item 300
    window.setTimeout(stopSubStage1, 1000)
}

function unlimit(number) {
    // item 277
    number = number || 0
    // item 274
    if (number >= 1000) {
        // item 278
        return translate("MES_UNLIMITED")
    } else {
        // item 279
        return number.toString()
    }
}


this.init = init
this.logout = logout
this.deleteAccount = deleteAccount
this.cancelDelete = cancelDelete
this.delete1 = delete1
this.delete2 = delete2
this.savePersonal = savePersonal
this.changePassword = changePassword
this.stopSubscription = stopSubscription
this.stop1 = stop1
this.languageSelected = languageSelected
this.languageSuggested = languageSuggested
this.saveYesNo = saveYesNo
}
